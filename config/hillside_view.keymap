#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#include "helpers.h"
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_46keys_hillside.h"

// #include "combos.dtsi"
#include "pts.dtsi"

/* Defines */

#define QUICK_TAP_MS 175

&sk {  // sticky-key config
    release-after-ms = <900>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
    ignore-modifiers;          // allow chording sticky mods & layers
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};



// Layes. If you need to modify layers it's easier to refer to them via names, such as SYM for symbol and NUM for numbrs.
// Alias your layers with names in the section below
#define DEF 0
#define SYM 1
#define NUM 2
#define ADJ 3
#define PTS 4
#define GAME 5

/* End of Defines */


// Q: What are those things starting with &? 
// A: Keywords that start with & are "behaviors". Behaviors are the main way to configure your keymap. 
//    The most common is called &kp which stands for key press. There several built-in bevaiors and also unlimitted number of ones you can create.
// Q: What are available built-in bevaiors?
// A: Here is a list of most common ones:
//   &kp - key press
//   &mo - momentary turn on the layer
//   &to - toggle a layer
//   &lt - layer tap; tap for a key pres and hold for a layer
//   &mt - mod tap; hold for modifier, tap for a key press
//   &sk - sticky key; sticky modifier


  /* Homerow mods */

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 // right hand
#define THUMBS LH4 LH3 LH2 LH1 LH0 RH0 RH1 RH2 RH3 RH4                                     // thumbs

ZMK_BEHAVIOR(hml, hold_tap,  // left-hand HRMs
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R>;
)

ZMK_BEHAVIOR(hmr, hold_tap,  // right-hand HRMs
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L>;
)

    /* Caps-word, num-word */

// tap: sticky-shift | shift + tap/ double-tap: caps-word | hold: shift
ZMK_BEHAVIOR(smart_shft, mod_morph,
    bindings = <&sk LSHFT>, <&caps_word>;
    mods = <(MOD_LSFT)>;
)
&caps_word {  // mods deactivate caps-word, requires PR #1451
    /delete-property/ ignore-modifiers;
};

// tap: num-word | double-tap: sticky num-layer | hold: num-layer
#define SMART_NUM &smart_num NUM 0
ZMK_BEHAVIOR(smart_num, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&mo>, <&num_dance>;
)
ZMK_BEHAVIOR(num_dance, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&num_word>, <&sl NUM>;  // reverse this for sticky-num on single tap
)

  /* Custom behaviors */

  // misc aliases
#define CANCEL      &kp K_CANCEL             // cancel caps-word, num-word



/ {

    behaviors {
		num_word: behavior_num_word {
		compatible = "zmk,behavior-caps-word";
		label = "NUM_WORD";
		#binding-cells = <0>;
                layers = <NUM>;                                // insert location of numbers layer here
		continue-list = <BACKSPACE DELETE DOT COMMA>;  // adjust as desired
                ignore-numbers;                                // numbers don't deactivate the layer
		};
	};

  // Activate ADJ layer when both SYM and NUM layers are active
  // https://zmk.dev/docs/features/conditional-layers
  conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
      if-layers = <SYM NUM>;
      then-layer = <ADJ>;
    };
  };

  // Combo setups
  // https://zmk.dev/docs/features/combos
  combos {
    compatible = "zmk,combos";
    // Caps Word that allows you type in caps until you hit sapce (or other defined characters)
    // https://zmk.dev/docs/behaviors/caps-word
    caps {
      timeout-ms = <50>;
      // Uses LB5 and RB5 which are the most left and most right keys on the 3rd row
      key-positions = <LB5 RB5>;
      bindings = <&caps_word>;
    };
  };

  behaviors {
    // Hold tap behavior which will allow us to have a different key whether the key is tapped or held
    // https://zmk.dev/docs/behaviors/hold-tap
    ht: hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "HOLD_TAP";
      #binding-cells = <2>;
      tapping_term_ms = <200>;
      quick_tap_ms = <200>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };


  keymap {
    compatible = "zmk,keymap";
    default_layer {
      label = "DEFAULT";
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬────────────╮
             &kp ESC        &kp Q         &kp W         &kp E         &kp R        &kp T                                                 &kp Y         &kp U         &kp I         &kp O        &kp P        &kp DEL    
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────┤
             &kp TAB        &kp A         &kp S         &kp D         &kp F        &kp G                                                 &kp H         &kp J         &kp K         &kp L        &kp SEMI     &kp BSPC    
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ╭─────────────╮     ╭─────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────┤
             ___            &kp Z         &kp X         &kp C         &kp V        &kp B                                                 &kp N         &kp M        &kp COMMA     &kp DOT       &kp FSLH     &kp RSHFT  
                                                                                                      ___                 ___                                                                                         
      // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ╰─────────────╯     ╰─────────────╯ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴────────────╯
                                         &kp LGUI      &kp ENTER       ___           ___                                                  ___        &kp LEFT      &kp SPACE     &kp RIGHT
      //                             ╰─────────────┴─────────────┴─────────────┴─────────────╯                                      ╰─────────────┴─────────────┴─────────────┴─────────────╯
      >;
      // Bindings for encoders, if you don't have encoders you can remove this line from all layers. If you leave it here it won't affect your keymap.
      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
    };
    sym_layer {
      label = "SYMBOLS";
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬────────────╮
              ___          &kp N1        &kp N2       &kp N3          &kp N4       &kp N5                                                &kp N6       &kp N7       &kp N8        &kp N9          &kp N0      &kp BSPC
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────┤
              ___          &kp EXCL      &kp AT       &kp POUND       &kp DLLR     &kp PRCNT                                            &kp CARET     &kp AMPS     &kp ASTRK     &kp LPAR       &kp RPAR     &kp BSPC
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ╭─────────────╮     ╭─────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────┤
              ___          ___            ___          &kp UNDER        &kp MINUS          ___                                          &kp SQT      &kp DQT      ___     ___       ___     ___
                                                                                                     ___                ___                                                                                         
      // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ╰─────────────╯     ╰─────────────╯ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴────────────╯
                                           ___           ___           ___           ___                                                 ___          ___            ___           ___         
      //                             ╰─────────────┴─────────────┴─────────────┴─────────────╯                                      ╰─────────────┴─────────────┴─────────────┴─────────────╯
      >;
      sensor-bindings = <&inc_dec_kp C_NEXT C_PREV &inc_dec_kp F18 F17>;
    };
    num_layer {
      label = "NUMBERS";
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬────────────╮
            &kp TAB        &ht F1 N1     &ht F2 N2     &ht F3 N3    &ht F4 N4     &ht F5 N5                                           &ht F6 N6       &ht F7 N7   &ht F8 N8       &ht F9 N9    &ht F10 N0       ___
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────┤
               ___          ___            ___            ___           ___          ___                                               &kp LEFT       &kp DOWN    &kp UP          &kp RIGHT       ___            ___
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ╭─────────────╮     ╭─────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────┤
               ___          ___            ___            ___           ___          ___                                              &kp C_PREV      &kp C_PP     &kp C_NEXT    &kp C_VOL_UP    &kp C_MUTE  &kp C_VOL_DN  
                                                                                                      ___                ___                                                                                          
      // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ╰─────────────╯     ╰─────────────╯ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴────────────╯
                                           ___            ___           ___           ___                                                ___          ___            ___           ___         
      //                             ╰─────────────┴─────────────┴─────────────┴─────────────╯                                      ╰─────────────┴─────────────┴─────────────┴─────────────╯
      >;
      sensor-bindings = <&inc_dec_kp F15 F14 &inc_dec_kp PG_UP PG_DN>;
    };
    adj_layer {
      label = "ADJUST";
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬────────────╮
           &bootloader &rgb_ug RGB_TOG &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI                               &out OUT_TOG       ___           ___           ___          ___        &bootloader
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────┤
           &sys_reset  &rgb_ug RGB_EFF &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD                                     ___          ___           ___           ___          ___         &sys_reset
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ╭─────────────╮     ╭─────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────┤
           &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                               ___          ___           ___           ___          ___          ___
                                                                                                     ___                ___                                                                                    
      // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ╰─────────────╯     ╰─────────────╯ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴────────────╯
                                   &ext_power EP_TOG     ___           ___           ___                                                   ___          ___           ___           ___           
      //                             ╰─────────────┴─────────────┴─────────────┴─────────────╯                                      ╰─────────────┴─────────────┴─────────────┴─────────────╯
      >;
      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };
  };
};

